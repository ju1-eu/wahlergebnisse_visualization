name: Update Stargazers

on:
  schedule:
    - cron: "0 0 * * *"  # Täglich um Mitternacht (5 Sterne!)
  workflow_dispatch:

jobs:
  update-stargazers:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Update Stargazers list
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs').promises;
            
            try {
              // Get stargazers
              const { data: stargazers } = await github.rest.activity.listStargazersForRepo({
                owner: context.repo.owner,
                repo: context.repo.repo,
              });
              
              // Create content
              const content = `# ⭐ Stargazers\n\nThanks to all our stargazers! ✨\n\n${
                stargazers.map(user => 
                  `[![${user.login}](${user.avatar_url}&s=64)](${user.html_url})`
                ).join(' ')
              }\n\nLast updated: ${new Date().toISOString()}\n`;
              
              // Try to get existing file
              let sha;
              try {
                const { data } = await github.rest.repos.getContent({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  path: 'STARGAZERS.md',
                  ref: context.sha
                });
                sha = data.sha;
                console.log('Found existing file with SHA:', sha);
              } catch (e) {
                console.log('No existing file found, creating new one');
              }
              
              // Create/update file
              const updateData = {
                owner: context.repo.owner,
                repo: context.repo.repo,
                path: 'STARGAZERS.md',
                message: 'Update Stargazers list',
                content: Buffer.from(content).toString('base64'),
                committer: {
                  name: 'GitHub Action',
                  email: 'action@github.com'
                }
              };
              
              // Add SHA if file exists
              if (sha) {
                updateData.sha = sha;
              }
              
              await github.rest.repos.createOrUpdateFileContents(updateData);
              console.log('Successfully updated STARGAZERS.md');
              
            } catch (error) {
              console.error('Error:', error);
              core.setFailed(error.message);
            }
